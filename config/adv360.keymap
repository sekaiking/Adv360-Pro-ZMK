/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/
/* THIS FILE WAS GENERATED!
*
* This file was generated automatically. You may or may not want to
* edit it directly.
*/

/// +-----+-----+-----+-----+-----+-----+-----+   +-----+-----+-----+-----+-----+-----+-----+
/// |     |     |     |     |     |     |     |   |     |     |     |     |     |     |     |
/// +-----+-----+-----+-----+-----+-----+-----+   +-----+-----+-----+-----+-----+-----+-----+
/// |     |     |     |     |     |     |     |   |     |     |     |     |     |     |     |
/// +-----+-----+-----+-----+-----+-----+-----+   +-----+-----+-----+-----+-----+-----+-----+
/// |     |     |     |     |     |     |     |   |     |     |     |     |     |     |     |
/// +-----+-----+-----+-----+-----+-----+-----+   +-----+-----+-----+-----+-----+-----+-----+
/// |     |     |     |     |     |     |               |     |     |     |     |     |     |
/// +-----+-----+-----+-----+-----+-----+               +-----+-----+-----+-----+-----+-----+
/// |     |     |     |     |     |                           |     |     |     |     |     |
/// +-----+-----+-----+-----+-----+                           +-----+-----+-----+-----+-----+
///
///                         +-----+-----+               +-----+-----+
///                         |     |     |               |     |     |
///                   +-----+-----+-----+               +-----+-----+-----+
///                   |     |     |     |               |     |     |     |
///                   +     +     +-----+               +-----+     +     +
///                   |     |     |     |               |     |     |     |
///                   +-----+-----+-----+               +-----+-----+-----+


#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define QWERTY 0
#define QWERTYP 1
#define DVORAKP 2
#define DVORAK 3
#define KEYPAD 4
#define FN 5
#define MOD 6
#define GAMING 7

/ {


  macros {

    repeat_right_click: repeat_right_click {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <30>;
      tap-ms = <40>;
      bindings = <&mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK &mkp RCLK>;
    };

    repeat_left_click: repeat_left_click {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <30>;
      tap-ms = <40>;
      bindings = <&mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK &mkp LCLK>;
    };

  };

  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"
    #ifndef VERSION_MACRO
    macro_ver: macro_ver {
      compatible = "zmk,behavior-macro";
      label = "macro_version";
      #binding-cells = <0>;
      bindings = <&kp RET>;
    };
    #endif


    rpt_lclick: repeat_left_click {
      compatible = "zmk,behavior-hold-tap";
      label = "REPEAT_LEFT_CLICK";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&repeat_left_click>;
    };

    rpt_rclick: repeat_right_click {
      compatible = "zmk,behavior-hold-tap";
      label = "REPEAT_RIGHT_CLICK";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&repeat_right_click>;
    };

    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <175>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    hm_l: hm_l {
      compatible = "zmk,behavior-hold-tap";
      label = "HM_L";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <175>;
      hold-trigger-key-positions = <66 35 36 52 67 65 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 70 71 72 73 74 75 37 53 69 68>;
      hold-trigger-on-release;
      global-quick-tap;
    };
    hm_r: hm_r {
      compatible = "zmk,behavior-hold-tap";
      label = "HM_R";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <175>;
      flavor = "balanced";
      hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
      hold-trigger-on-release;
      global-quick-tap;
    };
    gpipe: grave_pipe {
      compatible = "zmk,behavior-mod-morph";
      label = "grave_pipe";
      #binding-cells = <0>;
      bindings = <&kp GRAVE>, <&kp PIPE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    ppipe: pipe_pipe {
      compatible = "zmk,behavior-mod-morph";
      label = "pipe_pipe";
      #binding-cells = <0>;
      bindings = <&kp PIPE>, <&kp PIPE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    pkp_n1: plus_kp_n1 {
      compatible = "zmk,behavior-mod-morph";
      label = "plus_kp_n1";
      #binding-cells = <0>;
      bindings = <&kp PLUS>, <&kp N1>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    lkp_n2: left_bracket_kp_n2 {
      compatible = "zmk,behavior-mod-morph";
      label = "left_bracket_kp_n2";
      #binding-cells = <0>;
      bindings = <&kp LEFT_BRACKET>, <&kp N2>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    lkp_n3: left_brace_kp_n3 {
      compatible = "zmk,behavior-mod-morph";
      label = "left_brace_kp_n3";
      #binding-cells = <0>;
      bindings = <&kp LEFT_BRACE>, <&kp N3>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    lkp_n4: left_parenthesis_kp_n4 {
      compatible = "zmk,behavior-mod-morph";
      label = "left_parenthesis_kp_n4";
      #binding-cells = <0>;
      bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    akp_n5: amps_kp_n5 {
      compatible = "zmk,behavior-mod-morph";
      label = "amps_kp_n5";
      #binding-cells = <0>;
      bindings = <&kp AMPS>, <&kp N5>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    ekp_n6: equal_kp_n6 {
      compatible = "zmk,behavior-mod-morph";
      label = "equal_kp_n6";
      #binding-cells = <0>;
      bindings = <&kp EQUAL>, <&kp N6>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    rkp_n7: right_parenthesis_kp_n7 {
      compatible = "zmk,behavior-mod-morph";
      label = "right_parenthesis_kp_n7";
      #binding-cells = <0>;
      bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    rkp_n8: right_brace_kp_n8 {
      compatible = "zmk,behavior-mod-morph";
      label = "right_brace_kp_n8";
      #binding-cells = <0>;
      bindings = <&kp RIGHT_BRACE>, <&kp N8>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    rkp_n9: right_bracket_kp_n9 {
      compatible = "zmk,behavior-mod-morph";
      label = "right_bracket_kp_n9";
      #binding-cells = <0>;
      bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    skp_n0: star_kp_n0 {
      compatible = "zmk,behavior-mod-morph";
      label = "star_kp_n0";
      #binding-cells = <0>;
      bindings = <&kp STAR>, <&kp N0>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    eprcnt: excl_prcnt {
      compatible = "zmk,behavior-mod-morph";
      label = "excl_prcnt";
      #binding-cells = <0>;
      bindings = <&kp EXCL>, <&kp PRCNT>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    dgrave: dllr_grave {
      compatible = "zmk,behavior-mod-morph";
      label = "dllr_grave";
      #binding-cells = <0>;
      bindings = <&kp DLLR>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    dtilde: dllr_tilde {
      compatible = "zmk,behavior-mod-morph";
      label = "dllr_tilde";
      #binding-cells = <0>;
      bindings = <&kp DLLR>, <&kp TILDE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    ggrave: grave_grave {
      compatible = "zmk,behavior-mod-morph";
      label = "grave_grave";
      #binding-cells = <0>;
      bindings = <&kp GRAVE>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    pgrave: pipe_grave {
      compatible = "zmk,behavior-mod-morph";
      label = "pipe_grave";
      #binding-cells = <0>;
      bindings = <&kp PIPE>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    bhash: bslh_hash {
      compatible = "zmk,behavior-mod-morph";
      label = "bslh_hash";
      #binding-cells = <0>;
      bindings = <&kp BSLH>, <&kp HASH>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
    acaret: at_caret {
      compatible = "zmk,behavior-mod-morph";
      label = "at_caret";
      #binding-cells = <0>;
      bindings = <&kp AT>, <&kp CARET>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      bindings = <
        &kp EQUAL  &kp N1        &kp N2        &kp N3         &kp N4         &kp N5        &tog KEYPAD                                                 &mo MOD    &kp N6  &kp N7         &kp N8         &kp N9        &kp N0           &kp MINUS
        &kp TAB    &kp Q         &kp W         &kp E          &kp R          &kp T         &to QWERTYP                                                 &kp PSCRN  &kp Y   &kp U          &kp I          &kp O         &kp P            &kp BSLH
        &kp ESC    &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LSHFT F  &lt KEYPAD G  &to DVORAKP  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kp INS    &kp H   &hm_r RSHFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r RGUI SEMI  &kp SQT
        &kp LSHFT  &kp Z         &kp X         &kp C          &kp V          &kp B                                 &kp HOME      &kp PG_UP                        &kp N   &kp M          &kp COMMA      &kp DOT       &kp FSLH         &kp RSHFT
        &mo FN     &kp GRAVE     &kp CAPS      &kp LEFT       &kp RIGHT                    &kp BSPC     &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP         &kp DOWN       &kp LBKT      &kp RBKT         &mo FN
      >;
    };

    querty_prog {
      bindings = <
        &pgrave  &pkp_n1       &lkp_n2       &lkp_n3        &lkp_n4        &akp_n5       &trans                                      &trans  &ekp_n6  &rkp_n7        &rkp_n8        &rkp_n9       &skp_n0          &eprcnt
        &trans   &kp Q         &kp W         &kp E          &kp R          &kp T         &trans                                      &trans  &kp Y    &kp U          &kp I          &kp O         &kp P            &bhash
        &trans   &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LSHFT F  &lt KEYPAD G  &trans  &trans  &trans      &trans  &trans  &trans  &kp H    &hm_r RSHFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r RGUI SEMI  &kp MINUS
        &trans   &kp Z         &kp X         &kp C          &kp V          &kp B                         &trans      &trans                  &kp N    &kp M          &kp COMMA      &kp DOT       &kp FSLH         &trans
        &trans   &dtilde       &trans        &trans         &trans                       &trans  &trans  &trans      &trans  &trans  &trans           &trans         &trans         &kp SQT       &acaret          &trans
      >;
    };

    dvorak_prog {
      bindings = <
        &pgrave  &pkp_n1       &lkp_n2       &lkp_n3        &lkp_n4        &akp_n5       &trans                                      &trans  &ekp_n6  &rkp_n7        &rkp_n8        &rkp_n9       &skp_n0       &eprcnt
        &trans   &kp SEMI      &kp COMMA     &kp DOT        &kp P          &kp Y         &trans                                      &trans  &kp F    &kp G          &kp C          &kp R         &kp L         &bhash
        &trans   &hm_l LGUI A  &hm_l LALT O  &hm_l LCTRL E  &hm_l LSHFT U  &lt KEYPAD I  &trans  &trans  &trans      &trans  &trans  &trans  &kp D    &hm_r RSHFT H  &hm_r RCTRL T  &hm_r RALT N  &hm_r RGUI S  &kp MINUS
        &trans   &kp SQT       &kp Q         &kp J          &kp K          &kp X                         &trans      &trans                  &kp B    &kp M          &kp W          &kp V         &kp Z         &trans
        &trans   &dtilde       &trans        &trans         &trans                       &trans  &trans  &trans      &trans  &trans  &trans           &trans         &trans         &kp FSLH      &acaret       &trans
      >;
    };

    dvorak {
      bindings = <
        &trans     &trans        &trans        &trans         &trans         &trans        &trans                                      &trans  &trans   &trans         &trans         &trans        &trans        &trans
        &trans     &kp SEMI      &kp COMMA     &kp DOT        &kp P          &kp Y         &trans                                      &trans  &kp F    &kp G          &kp C          &kp R         &kp L         &trans
        &trans     &kp A         &kp O         &kp E          &kp U          &kp I         &trans  &trans  &trans      &trans  &trans  &trans  &kp D    &kp H          &kp T          &kp N         &kp S         &trans
        &trans     &kp SQT       &kp Q         &kp J          &kp K          &kp X                         &trans      &trans                  &kp B    &kp M          &kp W          &kp V         &kp Z         &trans
        &trans     &trans        &trans        &trans         &trans                       &trans  &trans  &trans      &trans  &trans  &trans           &trans         &trans         &trans        &trans        &trans
      >;
    };

    keypad {
      bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
        &trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &trans           &trans
      >;
    };

    fn {
      bindings = <
        &kp F1  &kp F2  &kp F3     &kp F4         &kp F5          &kp F6  &to GAMING                                           &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
        &trans  &trans  &trans     &trans         &trans          &trans  &to QWERTY                                       &none  &trans  &trans  &trans  &trans   &trans   &trans
        &trans  &trans  &trans     &rpt_lclick 0 0    &rpt_rclick 0 0          &trans  &to DVORAK  &trans  &trans      &trans  &trans  &none  &trans  &trans  &trans  &trans   &trans   &trans
        &trans  &trans  &trans     &trans         &trans          &trans                       &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
        &trans  &trans  &kp K_APP  &trans         &trans                  &trans       &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
      >;
    };

    mod {
      bindings = <
        &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none      &none      &none  &none  &none
        &none  &none        &none        &none        &none        &none        &bootloader                                             &bootloader             &none  &none      &none      &none  &none  &none
        &none  &none        &none        &none        &none        &none        &none       &none  &none     &bt BT_CLR  &none      &rgb_ug RGB_MEFS_CMD 5  &none  &none      &none      &none  &none  &none
        &none  &none        &none        &none        &macro_ver    &none                             &none     &none                                          &none  &none      &none      &none  &none  &none
        &none  &none        &none        &none        &none                      &none       &none  &none     &none      &bl BL_TOG  &rgb_ug RGB_TOG                 &bl BL_INC  &bl BL_DEC  &none  &none  &none
      >;
    };

  };
};
